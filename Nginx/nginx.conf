
#user http;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#error_log /var/log/nginx/error.log;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    types_hash_max_size 4096;

    #gzip  on;

    #server {
        # listen       80;
        # server_name  jumhorn.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   /home/www;
        #    index  index.html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # Auth server
    upstream auth-server {
        server auth.jumhorn.com:8880;
        server auth.jumhorn.eu.org backup;
    }


    # HTTPS server
    server {
        listen       8880 ssl;
        server_name  jumhorn.com www.jumhorn.com;

        ssl_certificate      /etc/letsencrypt/live/jumhorn.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/jumhorn.com/privkey.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            root   /home/admin/www;
            index  index.html;
        }

        location = /auth {
            internal;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_http_version 1.1;
            proxy_read_timeout 300;
            proxy_set_header Host jumhorn.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
            proxy_ssl_server_name on;// pass Host to auth-server
            proxy_pass https://auth-server;
        }

        location ~ ^/(login|logout|signup|profile) {
            proxy_ssl_server_name on;// pass Host to auth-server
            proxy_pass  https://auth-server;

            proxy_http_version 1.1;
            proxy_read_timeout 300;
            proxy_set_header Host jumhorn.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
        }

        #error_page  404              /404.html;
        location @error401 {
            return 302 /login;
        }

        # redirect server error pages to the static page /50x.html
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /upload {
            alias     /home/admin/www/upload;
            client_body_temp_path  /home/admin/www/upload;
            client_max_body_size 100M;
            dav_methods  PUT DELETE MKCOL COPY MOVE;
            create_full_put_path   on;
            dav_access             group:rw  all:r;
        }

        location ~/.mp4 {
            root /home/admin/www;
            mp4;
            mp4_buffer_size     1M;
            mp4_max_buffer_size 3M;

            # enable thread bool
            aio threads=default;

            # enable caching for mp4 videos
            # proxy_cache mycache;
            proxy_cache_valid 200 300s;
            proxy_cache_lock on;

            # enable nginx slicing
            slice              1m;
            proxy_cache_key    $host$uri$is_args$args$slice_range;
            proxy_set_header   Range $slice_range;
            proxy_http_version 1.1;

            # Immediately forward requests to the origin if we are filling the cache
            proxy_cache_lock_timeout 0s;

            # Set the 'age' to a value larger than the expected fill time
            proxy_cache_lock_age 200s;

            proxy_cache_use_stale updating;
        }

        location /vscode/ {
            auth_request /auth;
            error_page 401 = @error401;

            proxy_pass  http://127.0.0.1:8080/;

            proxy_redirect http://127.0.0.1:8080/ https://$host/vscode/;

            proxy_http_version 1.1;
            proxy_read_timeout 300;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
        }

        location /todo/ {
            auth_request /auth;
            error_page 401 = @error401;

            proxy_pass  http://127.0.0.1:58080/;

            #proxy_redirect off;
            proxy_redirect http://127.0.0.1:58080/ https://$http_host/todo/;

            # add_header Location https://$http_host/todo/;
            proxy_http_version 1.1;
            proxy_read_timeout 300;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /bash/ {
            auth_request /auth;
            error_page 401 = @error401;

            proxy_pass  http://127.0.0.1:7681/;

            proxy_redirect http://127.0.0.1:7681/ https://$http_host/bash/;

            proxy_http_version 1.1;
            proxy_read_timeout 300;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
        }
    }

    server {
        listen       8880 ssl;
        server_name  auth.jumhorn.com;

        ssl_certificate      /etc/letsencrypt/live/auth.jumhorn.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/auth.jumhorn.com/privkey.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass  http://127.0.0.1:58081/;
            proxy_http_version 1.1;
            proxy_read_timeout 300;
            proxy_set_header X-Forwarded-Proto $scheme;//http or https
            proxy_set_header Host $http_host;// domain
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
        }
    }

    server {
        listen       8880 ssl;
        server_name  chat.jumhorn.com;

        ssl_certificate      /etc/letsencrypt/live/chat.jumhorn.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/chat.jumhorn.com/privkey.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass  http://127.0.0.1:54000/;
            proxy_http_version 1.1;
            proxy_read_timeout 300;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Proto $scheme;//http or https
            proxy_set_header Host $http_host;// domain
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
        }
    }

    server {
        listen       8880 ssl;
        server_name  blog.jumhorn.com;

        ssl_certificate      /etc/letsencrypt/live/blog.jumhorn.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/blog.jumhorn.com/privkey.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass  http://127.0.0.1:54001/;
            proxy_http_version 1.1;
            proxy_read_timeout 300;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Proto $scheme;//http or https
            proxy_set_header Host $http_host;// domain
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
        }
    }
}

# SNI 分流
stream {
	map $ssl_preread_server_name $name {
		aws.jumhorn.com     127.0.0.1:50443;
		default             127.0.0.1:8880;
	}

	server {
		listen      443;
		proxy_pass  $name;
		ssl_preread on; 
	}
}
